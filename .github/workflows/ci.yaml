name: Full Continuous Integration

on:
  pull_request:
    branches: [main, dev]

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sonex_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sonex_test
      STRIPE_SECRET_KEY: dummy_key_for_ci
      NODE_ENV: test
      PGPASSWORD: postgres
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      STRIPE_CONNECT_WEBHOOK_SECRET: ${{ secrets.STRIPE_CONNECT_WEBHOOK_SECRET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: backend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./apps/backend
        run: pnpm install

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/sonex_test" >> $GITHUB_ENV
        
        

      - name: Generate Prisma Client
        working-directory: ./apps/backend
        run: pnpx prisma generate

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 2
          done


      - name: Migrate database
        working-directory: ./apps/backend
        run: pnpx prisma migrate deploy

      - name: Build project
        working-directory: ./apps/backend
        run: pnpm build

      - name: Run tests
        working-directory: ./apps/backend
        run: pnpm test